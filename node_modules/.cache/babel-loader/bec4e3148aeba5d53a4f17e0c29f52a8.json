{"ast":null,"code":"import _objectSpread from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { COMMENTS } from '../shared/comments';\nimport * as ActionTypes from './ActionTypes';\nexport var Comments = function Comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    errMess: null,\n    comments: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errMess: null,\n        comments: action.payload\n      });\n\n    case ActionTypes.COMMENTS_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errMess: action.payload,\n        comments: []\n      });\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      return _objectSpread({}, state, {\n        comments: state.comments.concat(comment)\n      });\n    //reducer function, will not change, or mutate the state but instead creates a new copy of the state\n\n    default:\n      //then returns that value from the reducer function here.\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/lindsey/Desktop/NucampFolder/3-React/confusion/src/redux/comments.js"],"names":["COMMENTS","ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":";AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAGN;AAAA,MAHOC,KAGP,uEAHe;AACzBC,IAAAA,OAAO,EAAE,IADgB;AAEzBC,IAAAA,QAAQ,EAAE;AAFe,GAGf;AAAA,MAAXC,MAAW;;AACd,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,+BAAWL,KAAX;AAAkBM,QAAAA,SAAS,EAAE,KAA7B;AAAoCL,QAAAA,OAAO,EAAE,IAA7C;AAAmDC,QAAAA,QAAQ,EAAEC,MAAM,CAACI;AAApE;;AAEJ,SAAKT,WAAW,CAACU,eAAjB;AACI,+BAAWR,KAAX;AAAkBM,QAAAA,SAAS,EAAE,KAA7B;AAAoCL,QAAAA,OAAO,EAAEE,MAAM,CAACI,OAApD;AAA6DL,QAAAA,QAAQ,EAAE;AAAvE;;AAEJ,SAAKJ,WAAW,CAACW,WAAjB;AACI,UAAIC,OAAO,GAAGP,MAAM,CAACI,OAArB;AACA,+BAAWP,KAAX;AAAkBE,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAeS,MAAf,CAAsBD,OAAtB;AAA5B;AAA4D;;AAEhE;AAAQ;AACJ,aAAOV,KAAP;AAZR;AAcH,CAlBM","sourcesContent":["import { COMMENTS } from '../shared/comments';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comments: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n        \n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n        \n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};//reducer function, will not change, or mutate the state but instead creates a new copy of the state\n        \n        default://then returns that value from the reducer function here.\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}