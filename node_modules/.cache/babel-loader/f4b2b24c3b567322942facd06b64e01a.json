{"ast":null,"code":"//Importing all the action types into our action creators.\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl'; //defined an action type\n//addComment is a function that creates an action object.\n//takes in four parameters to create it, in an arrow function.\n//the payload contains whatever needs to be carried in.\n//so the data that is sent back by the addComment.\n\nexport var addComment = function addComment(dishId, rating, author, comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    }\n  };\n}; //fetchDishes is a thunk. will dispatch several actions\n\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING //will inform that dishes will be loaded.\n\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING //will inform that promos will be loaded.\n\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};","map":{"version":3,"sources":["/Users/lindsey/Desktop/NucampFolder/3-React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["//Importing all the action types into our action creators.\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n//defined an action type\n//addComment is a function that creates an action object.\n//takes in four parameters to create it, in an arrow function.\n//the payload contains whatever needs to be carried in.\n//so the data that is sent back by the addComment.\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n//fetchDishes is a thunk. will dispatch several actions\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING//will inform that dishes will be loaded.\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING//will inform that promos will be loaded.\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}