{"ast":null,"code":"import _objectSpread from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as ActionTypes from './ActionTypes'; //Implementing Reducer function, taking the stae, and action as the two parameters. \n//Return, implement this as the switch. So, it'll switch on the action.type\n//For the default, you return the state unmodified.\n//So, this is the default implementation for our dishes.js file.\n//Giving default value as dishes, and then returning the state.\n\nexport var Dishes = function Dishes() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      });\n\n    case ActionTypes.DISHES_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      });\n    //Whatever I pass next to the state will be applied as modifications.\n\n    case ActionTypes.DISHES_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errMess: action.payload,\n        dishes: []\n      });\n    //dishes have tried to be loaded but failed.\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/lindsey/Desktop/NucampFolder/3-React/confusion/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errMess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAIJ;AAAA,MAJKC,KAIL,uEAJa;AACvBC,IAAAA,SAAS,EAAE,IADY;AAEvBC,IAAAA,OAAO,EAAE,IAFc;AAGvBC,IAAAA,MAAM,EAAE;AAHe,GAIb;AAAA,MAAXC,MAAW;;AACd,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,UAAjB;AACI,+BAAWN,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAE,IAA7C;AAAmDC,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAAlE;;AAEJ,SAAKT,WAAW,CAACU,cAAjB;AACI,+BAAWR,KAAX;AAAkBC,QAAAA,SAAS,EAAE,IAA7B;AAAmCC,QAAAA,OAAO,EAAE,IAA5C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D;AAA8D;;AAElE,SAAKL,WAAW,CAACW,aAAjB;AACI,+BAAWT,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAApD;AAA6DJ,QAAAA,MAAM,EAAE;AAArE;AAAyE;;AAE7E;AACI,aAAOH,KAAP;AAXR;AAaH,CAlBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\n//Implementing Reducer function, taking the stae, and action as the two parameters. \n//Return, implement this as the switch. So, it'll switch on the action.type\n//For the default, you return the state unmodified.\n//So, this is the default implementation for our dishes.js file.\n//Giving default value as dishes, and then returning the state.\n\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};//Whatever I pass next to the state will be applied as modifications.\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};//dishes have tried to be loaded but failed.\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}