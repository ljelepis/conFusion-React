{"ast":null,"code":"import _classCallCheck from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lindsey/Desktop/NucampFolder/3-React/confusion/src/components/DishdetailComponent.js\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, FormGroup, Label, Input, ModalHeader } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nvar required = function required(val) {\n  return val && val.length;\n};\n\nvar maxLength = function maxLength(len) {\n  return function (val) {\n    return !val || val.length <= len;\n  };\n};\n\nvar minLength = function minLength(len) {\n  return function (val) {\n    return val && val.length >= len;\n  };\n};\n\nfunction RenderDish(_ref) {\n  var dish = _ref.dish;\n\n  if (dish != null) {\n    return React.createElement(\"div\", {\n      className: \"col-sm-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      width: \"100%\",\n      src: baseUrl + dish.image,\n      alt: dish.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, dish.name), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, dish.description))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n}\n\nfunction RenderComments(_ref2) {\n  var comments = _ref2.comments,\n      addComment = _ref2.addComment,\n      dishId = _ref2.dishId;\n  if (comments != null) return React.createElement(\"div\", {\n    className: \"col-sm-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, comments.map(function (comment) {\n    return React.createElement(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"-- \", comment.comment), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"-- \", comment.author, \", \", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(Date.parse(comment.date)))));\n  })), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(CommentForm, {\n    dishId: dishId,\n    addComment: addComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n}\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      isModalOpen: false\n    };\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(values) {\n      this.toggleModal();\n      this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(LocalForm, {\n        onSubmit: function onSubmit(values) {\n          return _this2.handleSubmit(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(Control.select, {\n        name: \"rating\",\n        id: \"rating\",\n        model: \".rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"5\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(Control.text, {\n        name: \"author\",\n        id: \"author\",\n        placeholder: \"Your Name\",\n        model: \".author\",\n        validators: {\n          required: required,\n          minLength: minLength(3),\n          maxLength: maxLength(15)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".author\",\n        show: \"touched\",\n        messages: {\n          required: 'Required',\n          minLength: 'Must be greater than 2 characters',\n          maxLength: 'Must be 15 characters or less'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(Control.textarea, {\n        name: \"comment\",\n        id: \"comment\",\n        model: \".comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Submit\")))), React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Submit comment\"));\n    }\n  }]);\n\n  return CommentForm;\n}(Component); //Doing conditional rendering here. Conditioned on certain properties here.\n\n\nvar DishDetail = function DishDetail(props) {\n  if (props.isLoading) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  } else if (props.errMess) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, props.errMess)));\n  } else if (props.dish != null) return React.createElement(\"div\", {\n    class: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Menu\")), React.createElement(BreadcrumbItem, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, props.dish.name)), React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, props.dish.name), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(RenderDish, {\n    dish: props.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(RenderComments, {\n    comments: props.comments,\n    addComment: props.addComment,\n    dishId: props.dish.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })));else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  });\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/lindsey/Desktop/NucampFolder/3-React/confusion/src/components/DishdetailComponent.js"],"names":["Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","FormGroup","Label","Input","ModalHeader","Link","React","Component","Control","LocalForm","Errors","Loading","baseUrl","required","val","length","maxLength","len","minLength","RenderDish","dish","image","name","description","RenderComments","comments","addComment","dishId","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","props","state","isModalOpen","toggleModal","bind","setState","values","rating","handleSubmit","DishDetail","isLoading","errMess"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,UAAvD,EAAmEC,cAAnE,EAAmFC,MAAnF,EAA2FC,KAA3F,EAAkGC,SAAlG,EAA6GC,SAA7G,EAAwHC,KAAxH,EAA+HC,KAA/H,EAAsIC,WAAtI,QAAyJ,YAAzJ;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,kBAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,SAASA,GAAG,IAAIA,GAAG,CAACC,MAApB;AAAA,CAAjB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,SAAS,UAACH,GAAD;AAAA,WAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAAlC;AAAA,GAAT;AAAA,CAAlB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,GAAD;AAAA,SAAS,UAACH,GAAD;AAAA,WAASA,GAAG,IAAKA,GAAG,CAACC,MAAJ,IAAcE,GAA/B;AAAA,GAAT;AAAA,CAAlB;;AAGA,SAASE,UAAT,OAA8B;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC1B,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,WACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAER,OAAO,GAAGQ,IAAI,CAACC,KAA1C;AAAiD,MAAA,GAAG,EAAED,IAAI,CAACE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACE,IAAjB,CADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWF,IAAI,CAACG,WAAhB,CAFJ,CAFJ,CADJ,CADJ;AAWH,GAZD,MAaK;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AACJ;;AAED,SAASC,cAAT,QAAwD;AAAA,MAA/BC,QAA+B,SAA/BA,QAA+B;AAAA,MAArBC,UAAqB,SAArBA,UAAqB;AAAA,MAATC,MAAS,SAATA,MAAS;AACpD,MAAIF,QAAQ,IAAI,IAAhB,EACI,OACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAa;AACvB,WACI;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOD,OAAO,CAACA,OAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOA,OAAO,CAACE,MAAf,QAAyB,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,OAA1B;AAAmCC,MAAAA,GAAG,EAAE;AAAxC,KAAjC,EAAsFC,MAAtF,CAA6F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,IAAnB,CAAT,CAA7F,CAAzB,CAFJ,CADJ;AAMH,GAPA,CADL,CAFJ,EAYI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEb,MAArB;AAA6B,IAAA,UAAU,EAAED,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CADJ,CADJ,KAoBI,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGP;;IAEKe,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AALe;AAMlB;;;;kCAEa;AACV,WAAKC,QAAL,CAAc;AACVH,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,OAAd;AAGH;;;iCAEYI,M,EAAQ;AACjB,WAAKH,WAAL;AACA,WAAKH,KAAL,CAAWhB,UAAX,CAAsB,KAAKgB,KAAL,CAAWf,MAAjC,EAAyCqB,MAAM,CAACC,MAAhD,EAAwDD,MAAM,CAACjB,MAA/D,EAAuEiB,MAAM,CAACnB,OAA9E;AACH;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKc,KAAL,CAAWC,WAA1B;AAAuC,QAAA,MAAM,EAAE,KAAKC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,kBAACG,MAAD;AAAA,iBAAY,MAAI,CAACE,YAAL,CAAkBF,MAAlB,CAAZ;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,EAAE,EAAC,QAAjC;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CAFJ,CADJ,EAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,OAAD,CAAS,IAAT;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,EAAE,EAAC,QAA/B;AAAwC,QAAA,WAAW,EAAC,WAApD;AAAgE,QAAA,KAAK,EAAC,SAAtE;AAAgF,QAAA,UAAU,EAAE;AACxFnC,UAAAA,QAAQ,EAARA,QADwF;AAC9EK,UAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAD0D;AACrDF,UAAAA,SAAS,EAAEA,SAAS,CAAC,EAAD;AADiC,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,QAAQ,EAAE;AACNH,UAAAA,QAAQ,EAAE,UADJ;AAENK,UAAAA,SAAS,EAAE,mCAFL;AAGNF,UAAAA,SAAS,EAAE;AAHL,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAXJ,EA4BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,OAAD,CAAS,QAAT;AAAkB,QAAA,IAAI,EAAC,SAAvB;AAAiC,QAAA,EAAE,EAAC,SAApC;AAA8C,QAAA,KAAK,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5BJ,EAgCI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCJ,CADJ,CAFJ,CADJ,EAwCI,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAE,KAAK6B,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxCJ,CADJ;AA4CH;;;;EAjEqBtC,S,GAqE1B;;;AACA,IAAM4C,UAAU,GAAG,SAAbA,UAAa,CAACT,KAAD,EAAW;AAC1B,MAAIA,KAAK,CAACU,SAAV,EAAqB;AACjB,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH,GARD,MASK,IAAIV,KAAK,CAACW,OAAV,EAAmB;AACpB,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,KAAK,CAACW,OAAX,CADJ,CADJ,CADJ;AAOH,GARI,MASA,IAAIX,KAAK,CAACtB,IAAN,IAAc,IAAlB,EACD,OACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB,CADJ,EAEI,oBAAC,cAAD;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBsB,KAAK,CAACtB,IAAN,CAAWE,IAAnC,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKoB,KAAK,CAACtB,IAAN,CAAWE,IAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,CADJ,EAWI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEoB,KAAK,CAACtB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEsB,KAAK,CAACjB,QAAhC;AACI,IAAA,UAAU,EAAEiB,KAAK,CAAChB,UADtB;AAEI,IAAA,MAAM,EAAEgB,KAAK,CAACtB,IAAN,CAAWU,EAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,CADJ,CADC,KAsBD,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGP,CA5CD;;AA8CA,eAAeqB,UAAf","sourcesContent":["import { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, FormGroup, Label, Input, ModalHeader } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\n\nfunction RenderDish({ dish }) {\n    if (dish != null) {\n        return (\n            <div className=\"col-sm-12 col-md-5 m-1\">\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nfunction RenderComments({comments, addComment, dishId}) {\n    if (comments != null)\n        return (\n            <div className=\"col-sm-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                    {comments.map((comment) => {\n                        return (\n                            <li key={comment.id}>\n                                <p>-- {comment.comment}</p>\n                                <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n                <React.Fragment>\n                    <CommentForm dishId={dishId} addComment={addComment} />\n                </React.Fragment>\n            </div>\n        );\n    else\n        return (\n            <div></div>\n        );\n}\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <FormGroup>\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select name=\"rating\" id=\"rating\" model=\".rating\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text name=\"author\" id=\"author\" placeholder=\"Your Name\" model=\".author\" validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea name=\"comment\" id=\"comment\" model=\".comment\" />\n                            </FormGroup>\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n                <Button outline onClick={this.toggleModal}>Submit comment</Button>\n            </React.Fragment>\n        );\n    }\n\n\n}\n//Doing conditional rendering here. Conditioned on certain properties here.\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null)\n        return (\n            <div class=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDish dish={props.dish} />\n                    <RenderComments comments={props.comments}\n                        addComment={props.addComment}\n                        dishId={props.dish.id} />\n                </div>\n            </div>\n        );\n    else\n        return (\n            <div></div>\n        );\n}\n\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}